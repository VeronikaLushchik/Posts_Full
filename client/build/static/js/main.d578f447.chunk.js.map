{"version":3,"sources":["components/PostList/PostsList.tsx","components/Header/Header.tsx","validate.ts","redux/types.ts","api/index.ts","redux/actions/postActions.ts","pages/CreatePost/index.ts","pages/CreatePost/CreatePost.tsx","components/PostList/index.ts","redux/actions/commentsActions.ts","components/CommentForm.tsx","components/PostPage/PostPage.tsx","components/PostPage/index.ts","routes.tsx","pages/Layout/Layout.tsx","App.tsx","redux/reducers/postsReducer.ts","redux/store.ts","index.tsx"],"names":["maxWidth","Header","query","setSearchValue","select","setSelectValue","page","setSelectPage","setSelectView","view","className","Paper","component","sx","p","display","alignItems","width","InputBase","ml","flex","placeholder","inputProps","value","onChange","event","target","IconButton","type","aria-label","Box","minWidth","FormControl","fullWidth","InputLabel","id","Select","labelId","label","MenuItem","ToggleButtonGroup","orientation","exclusive","ToggleButton","validatePost","Yup","title","min","max","required","body","validateComment","name","email","SET_POSTS","SET_POST","SET_COMMENTS","SET_COMMENT","SET_LOADER","SET_SEARCH_VALUE","SET_SELECT_VALUE","SET_SELECT_PAGE","SET_SELECT_VIEW","instance","axios","create","baseURL","makeRequest","method","url","params","request","postApi","removePost","postId","getPosts","getPostComments","getPost","addPost","newPost","addComment","newComment","setPost","post","setLoader","loader","connect","addNewPost","dispatch","a","console","log","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","handleChange","handleBlur","handleSubmit","isSubmitting","TextField","onBlur","helperText","Button","disabled","variant","sortPosts","posts","sort","b","localeCompare","state","loadPosts","then","response","data","useState","currentPage","setCurrentPage","toggler","setToggler","displayedList","setDisplayedList","indexOfLastPost","indexOfFirstPost","useEffect","slice","trim","filter","includes","style","height","flexWrap","justifyContent","m","size","onClick","map","Card","margin","CardContent","Typography","CardActions","to","Stack","spacing","Pagination","count","Math","ceil","length","val","setComment","comment","CommentForm","addNewComment","PostPage","match","loadPost","loadComments","comments","href","withRouter","routes","path","useStyles","makeStyles","padding","fontSize","fontWight","lineHeight","drawer","background","textTransform","item","root","flexDirection","active","box","position","zIndex","top","right","border","like","cursor","button","Layout","children","classes","history","useHistory","React","open","setOpen","List","text","ListItem","push","ListItemText","primary","ClickAwayListener","onClickAway","prev","src","alt","Portal","App","exact","initialState","userId","store","createStore","action","applyMiddleware","thunk","Root","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d578f447.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Button, Stack } from '@mui/material';\nimport { Link } from 'react-router-dom'\nimport {Header} from '../Header/Header';\nimport CreatePost from '../../pages/CreatePost';\n\ntype Props = {\n  posts: Post[],\n  loader: boolean,\n  loadPosts: () => void;\n  query: string;\n  setSearchValue: (q: string) => void;\n  select: string;\n  setSelectValue: (s: string) => void;\n  page: string;\n  setSelectPage: (p: string) => void;\n  view: string;\n  setSelectView: (v: string) => void;\n};\n\nfunction sortPosts(posts: Post[], select:string) {\n  return posts.sort((a: any, b: any) => {\n    switch (select) {\n      case 'ASC':\n        return a.title.localeCompare(b.title)\n      case 'DESC':\n        return b.title.localeCompare(a.title)\n      default:\n        return;\n    }\n  })\n}\n\nlet maxWidth: number;\n\nexport const PostsList: React.FC<Props> = ({ page, setSelectPage, setSelectValue, select, setSearchValue, query, posts, loadPosts, view, setSelectView }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [toggler, setToggler] = useState(false);\n\n  const [displayedList, setDisplayedList] = useState<Post[]>([])\n  \n  const indexOfLastPost = currentPage * +page;\n  const indexOfFirstPost = indexOfLastPost - +page;\n\n  const handleChange = () => {\n    setToggler(!toggler);\n  };\n\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  \n  useEffect(() => {\n    if (view === 'list') {\n      maxWidth = 540;\n    } else {\n      maxWidth = 370;\n    }\n    setDisplayedList(posts.slice(indexOfFirstPost, indexOfLastPost))\n  }, [posts, currentPage, page, view])\n\n  useEffect(() => {\n    if(query.trim()){\n      setDisplayedList(sortPosts(posts.slice(indexOfFirstPost, indexOfLastPost).filter(post => post.title.includes(query)), select))\n    }else {\n      setDisplayedList(sortPosts(posts.slice(indexOfFirstPost, indexOfLastPost), select))\n    }\n  }, [query, select]);\n\n  return (\n    <>\n    <div style={{ height: '100%', width: '100%', display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n    <Box sx={{ '& button': { m: 1 } }}>\n    <Header setSearchValue={setSearchValue} query={query} select={select} setSelectValue={setSelectValue} setSelectPage={setSelectPage} page={page} setSelectView={setSelectView} view={view} />\n    <Button variant=\"outlined\" size=\"large\" onClick={handleChange}>\n        Create a post\n    </Button>\n    {toggler && \n      <CreatePost />\n    }\n    </Box>\n    {displayedList.map((post:Post) => \n        <Card key={post.id} sx={{ maxWidth: {maxWidth}, margin: '10px' }} className=\"cards\">\n          <CardContent>\n            <Typography variant=\"h5\" component=\"div\">\n              {post.title}\n            </Typography>\n            <Typography variant=\"body2\">\n              {post.body}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Link to={`/posts/${post.id}`} >\n            Read more\n            </Link>\n          </CardActions>\n        </Card>\n    )}\n    <Stack spacing={2} m=\"auto\" className=\"pagination\">\n      {!query ? <Pagination size=\"large\" count={Math.ceil(posts.length / +page)} page={currentPage} onChange={(event,val)=> setCurrentPage(val)} />\n      : <Pagination size=\"large\" count={Math.ceil(displayedList.length / +page)} page={currentPage} onChange={(event,val)=> setCurrentPage(val)} />}\n    </Stack>\n    </div>\n    </>\n  );\n};\n","/* eslint-disable */\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport { ToggleButton, ToggleButtonGroup } from '@mui/material';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport '../../scss/header.scss';\n\ntype Props = {\n  query: string;\n  setSearchValue: (q: string) => void;\n  select: string;\n  setSelectValue: (s: string) => void;\n  page: string;\n  setSelectPage: (s: string) => void;\n  view: string;\n  setSelectView: (v: string) => void;\n}\n\nexport const Header:React.FC<Props> = ({ query, setSearchValue, select, setSelectValue, page, setSelectPage, setSelectView, view}) => {\n\n  return (\n    <>\n      <div className=\"header\">\n      <Paper\n        component=\"form\"\n        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}\n      >\n        <InputBase\n          sx={{ ml: 1, flex: 1 }}\n          placeholder=\"Search...\"\n          inputProps={{ 'aria-label': 'search' }} \n          value={query}\n          onChange={(event) => {\n            setSearchValue(\n              event.target.value\n            )}}\n        />\n        <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\n          <SearchIcon />\n        </IconButton>\n        </Paper>\n\n        <Box sx={{ minWidth: 120 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">Alphabet</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={select}\n              label=\"Alphabet\"\n              onChange={(event) => {\n                setSelectValue(\n                  event.target.value\n                )}}\n            >\n              <MenuItem value={'ASC'}>ASC</MenuItem>\n              <MenuItem value={'DESC'}>DESC</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n\n        <Box sx={{ minWidth: 120 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">Posts</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={page}\n              label=\"pagePosts\"\n              onChange={(event) => {\n                setSelectPage(\n                  event.target.value\n                )}}\n            >\n              <MenuItem value={'6'}>6</MenuItem>\n              <MenuItem value={'12'}>12</MenuItem>\n              <MenuItem value={'24'}>24</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n\n        <ToggleButtonGroup\n          orientation=\"horizontal\"\n          value={view}\n          exclusive\n          onChange={(event, value) => {\n            setSelectView(\n              value\n            )}}\n        >\n          <ToggleButton value=\"module\" aria-label=\"module\">\n            <ViewModuleIcon />\n          </ToggleButton>\n          <ToggleButton value=\"list\" aria-label=\"list\">\n            <ViewListIcon />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n    </>\n  );\n}\n","import * as Yup from 'yup';\n\nexport const validatePost = Yup.object({\n  title: Yup.string()\n    .min(5, 'Must be 5 characters or more')\n    .max(50, 'Must be 50 characters or less')\n    .required('Required'),\n  body: Yup.string()\n    .required('Required'),\n});\n\nexport const validateComment = Yup.object({\n  name: Yup.string()\n    .min(5, 'Must be 5 characters or more')\n    .max(50, 'Must be 50 characters or less')\n    .required('Required'),\n  body: Yup.string()\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n});\n","export const SET_POSTS = 'SET_POSTS';\nexport const SET_POST = 'SET_POST';\nexport const SET_COMMENTS = 'SET_COMMENTS';\nexport const SET_COMMENT = 'SET_COMMENT';\nexport const SET_LOADER = 'SET_LOADER';\nexport const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\nexport const SET_SELECT_VALUE = 'SET_SELECT_VALUE';\nexport const SET_SELECT_PAGE = 'SET_SELECT_PAGE';\nexport const SET_SELECT_VIEW = 'SET_SELECT_VIEW';\n","import axios from 'axios';\n\nexport const instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n});\n\ntype Method = 'get' | 'post' | 'delete';\n\nconst makeRequest = (method:Method, url:string, params:{}) => {\n  return instance[method](`${url}`, params);\n};\n\nconst request = (method:Method, url:string) => {\n  return (params = {}) => makeRequest(method, url, params);\n};\n\nexport const postApi = {\n  removePost: (postId:number) => request('delete', `/posts/${postId}`)(),\n  getPosts: request('get', '/posts'),\n  getPostComments: (postId:number) => request('get', `/posts/${postId}/comments`)(),\n  getPost: (id:number) => request('get', `/posts/${id}`)(),\n  addPost: (newPost: Post) => request('post', '/posts')(newPost),\n  addComment: (newComment: Comment) => request('post', '/posts')(newComment),\n};\n","/* eslint-disable */\nimport { AxiosResponse } from 'axios';\nimport { AnyAction, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { SET_POSTS, SET_POST, SET_LOADER, SET_SEARCH_VALUE, SET_SELECT_VALUE, SET_SELECT_PAGE, SET_SELECT_VIEW } from '../types';\n\nimport { postApi } from '../../api';\n\nexport const setPosts = (posts: Post[]) => ({ type: SET_POSTS, posts });\nexport const setPost = (post: Post) => ({ type: SET_POST, post });\nexport const setLoader = (loader: boolean) => ({ type: SET_LOADER, loader });\n\nexport const loadPosts = (\n) => async (dispatch: Dispatch) => {\n  try {\n    await postApi.getPosts()\n      .then((response: AxiosResponse<{}>) => {\n        dispatch(setPosts(response.data as Post[]));\n      });\n    dispatch(setLoader(false));\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('-------e', e);\n  }\n};\n\nexport const loadPost = (id:number\n  ) => async (dispatch: Dispatch) => {\n    try {\n      await postApi.getPost(id)\n        .then((response: AxiosResponse<{}>) => {\n          dispatch(setPost(response.data as Post));\n        });\n      dispatch(setLoader(false));\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log('-------e', e);\n    }\n  };\n\nexport const addNewPost = (post: Post)\n: ThunkAction<void, RootState, unknown, AnyAction> => async dispatch => {\n  try {\n    await postApi.addPost(post);\n    dispatch(setPost(post));\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('-------e', e);\n  }\n};\n\nexport const setSearchValue = (query:string) => (dispatch:Dispatch) => {\n  dispatch({\n    type: SET_SEARCH_VALUE,\n    query: query,\n  });\n};\n\nexport const setSelectValue = (select:string) => (dispatch:Dispatch) => {\n  dispatch({\n    type: SET_SELECT_VALUE,\n    select: select,\n  });\n};\n\nexport const setSelectPage = (page:string) => (dispatch:Dispatch) => {\n  dispatch({\n    type: SET_SELECT_PAGE,\n    page: page,\n  });\n};\n\nexport const setSelectView = (view:string) => (dispatch:Dispatch) => {\n  dispatch({\n    type: SET_SELECT_VIEW,\n    view: view,\n  });\n};\n","import { connect } from 'react-redux';\nimport { CreatePost } from './CreatePost';\nimport { addNewPost } from '../../redux/actions/postActions';\n\nexport default connect(null, { addNewPost })(CreatePost);\n","/* eslint-disable */\nimport React from 'react';\nimport { Form, Formik, ErrorMessage } from 'formik';\nimport { Button, TextField } from '@mui/material';\nimport { validatePost } from '../../validate';\nimport '../../scss/CreatePost.scss';\n\ntype Props = {\n  addNewPost: (post:Post) => void,\n};\n\nexport const CreatePost: React.FC<Props> = ({ addNewPost }) => {\n  return (\n    <div className=\"create\">\n      <h1 className=\"create__title\">Create a post</h1>\n      <Formik\n        initialValues={{ title: '', body: '' }}\n        validationSchema={validatePost}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          addNewPost(values);\n          console.log('1')\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <Form onSubmit={handleSubmit} className=\"create__form\">\n            <TextField\n              placeholder=\"Title\"\n              name=\"title\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.title}\n              className=\"create__input\"\n              helperText={<ErrorMessage name=\"title\" />}\n            />\n            <TextField\n              placeholder=\"Text\"\n              name=\"body\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.body}\n              className=\"create__input\"\n              helperText={<ErrorMessage name=\"body\" />}\n            />\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"create__button\"\n              variant=\"contained\"\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import { connect } from 'react-redux';\nimport { PostsList } from './PostsList';\nimport {\n  loadPosts, setSearchValue, setSelectValue, setSelectPage, setSelectView,\n} from '../../redux/actions/postActions';\n\nconst mapStateToProps = (state:RootState) => {\n  return {\n    posts: state.posts,\n    loader: state.loader,\n    query: state.query,\n    select: state.select,\n    page: state.page,\n    view: state.view,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadPosts, setSearchValue, setSelectValue, setSelectPage, setSelectView,\n})(PostsList);\n","import { AxiosResponse } from 'axios';\nimport { AnyAction, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { SET_COMMENTS, SET_COMMENT } from '../types';\n\nimport { postApi } from '../../api';\n\nexport const setComments = (comments: Comment[]) => ({ type: SET_COMMENTS, comments });\nexport const setComment = (comment: Comment) => ({ type: SET_COMMENT, comment });\n\nexport const loadComments = (postId:number) => async (dispatch: Dispatch) => {\n  try {\n    await postApi.getPostComments(postId)\n      .then((response: AxiosResponse<{}>) => {\n        dispatch(setComments(response.data as Comment[]));\n      });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('-------e', e);\n  }\n};\n\nexport const addNewComment = (comment: Partial<Comment>)\n: ThunkAction<void, RootState, unknown, AnyAction> => async dispatch => {\n  try {\n    await postApi.addComment(comment as Comment);\n    dispatch(setComment(comment as Comment));\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('-------e', e);\n  }\n};\n","import React from 'react';\nimport { Form, Formik, ErrorMessage } from 'formik';\nimport { Button, TextField } from '@mui/material';\nimport { validateComment } from '../validate';\n\ntype Props = {\n  addNewComment: (comment:Partial<Comment>) => void,\n};\n\nexport const CommentForm: React.FC<Props> = ({ addNewComment }) => {\n  return (\n    <div className=\"create\">\n      <h1 className=\"create__title\">Add a comment</h1>\n      <Formik\n        initialValues={{ name: '', body: '', email: '' }}\n        validationSchema={validateComment}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          addNewComment(values);\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <Form onSubmit={handleSubmit} className=\"create__form\">\n            <TextField\n              placeholder=\"Name\"\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n              className=\"create__input\"\n              helperText={<ErrorMessage name=\"name\" />}\n            />\n            <TextField\n              placeholder=\"Email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              className=\"create__input\"\n              helperText={<ErrorMessage name=\"email\" />}\n            />\n            <TextField\n              placeholder=\"Text\"\n              name=\"body\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.body}\n              className=\"create__input\"\n              helperText={<ErrorMessage name=\"body\" />}\n            />\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"create__button\"\n              variant=\"contained\"\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","/* eslint-disable */\nimport { Typography } from '@mui/material'\nimport React, { useEffect } from 'react'\nimport { CommentForm } from '../CommentForm'\nimport '../../scss/post.scss'\n\ninterface Props {\n    post: Post,\n    match: any\n    comments: Comment[],\n    loadComments: (activePostId:number) => void;\n    loadPost: (id:number) => void;\n    addNewComment: (comment: Partial<Comment>) => void;\n}\n\nconst PostPage:React.FC<Props> = ({post, match, loadPost, loadComments,  addNewComment, comments}) => {\n    let id = match?.params?.postId\n\n    useEffect(() => {\n        loadPost(id)\n        loadComments(id)\n    },[])\n\n  if (!post) {\n    return (\n      <section>\n        <h2>Post not found!</h2>\n      </section>\n    )\n  }\n\n  return (\n      <>\n    <section>\n      <article className=\"post\">\n      <Typography variant=\"h3\" component=\"h2\">\n        {post.title}\n      </Typography>\n        <p className=\"post__text\">{post.body}</p>\n        <div className=\"post__comments\">Comments</div>\n        <ul className=\"post__comment\">\n        {comments.map((comment:Partial<Comment>) => \n        <div className=\"post__card\">\n            <li className=\"post__title\">{comment.name}</li>\n            <li className=\"post__email\">\n              <a className=\"post__email\" href=\"#\">{comment.email}</a>\n            </li>\n            <li className=\"post__body\">{comment.body}</li>\n        </div>)}\n        </ul>\n      </article>\n    </section>\n    <CommentForm addNewComment={addNewComment}/>\n    </>\n  )\n}\n\nexport default PostPage;\n","/* eslint-disable */\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom';\nimport { loadPost } from '../../redux/actions/postActions';\nimport { loadComments } from '../../redux/actions/commentsActions';\nimport { addNewComment } from '../../redux/actions/commentsActions';\nimport PostPage from './PostPage';\n\nconst mapStateToProps = (state:any) => ({post: state.post, comments: state.comments })\n  \n  \n  export default withRouter(connect(mapStateToProps, { loadComments, loadPost, addNewComment })(PostPage))","/* eslint-disable */\nimport React from 'react';\nimport PostsList from './components/PostList';\nimport CreatePost from './pages/CreatePost';\nimport PostPage from './components/PostPage';\n\nexport const routes = [\n  {\n    page: <PostsList />,\n    path: '/',\n  },\n  {\n    page: <CreatePost />,\n    path: '/create',\n  },\n\n  {\n    page: <PostPage />,\n    path: \"/posts/:postId\",\n  },\n];\n","import { makeStyles } from '@mui/styles';\nimport React from 'react';\nimport {\n  Box,\n  ClickAwayListener,\n  List, ListItem, ListItemText, Portal,\n} from '@mui/material';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles({\n  page: {\n    maxWidth: '1200px',\n    height: '100%',\n    padding: '70px',\n    fontSize: '16px',\n    fontWight: '400',\n    lineHeight: '1.5',\n  },\n\n  drawer: {\n    width: '100%',\n    display: 'flex',\n    height: '50px',\n    background: '#f4f4f4',\n    textTransform: 'uppercase',\n  },\n\n  item: {\n    justifyContent: 'start',\n    maxWidth: '150px',\n  },\n\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n\n  },\n  active: {\n    background: '#f4f4f4',\n  },\n  box: {\n    position: 'fixed',\n    zIndex: 1,\n    width: 400,\n    height: 100,\n    top: '5%',\n    right: '0%',\n    border: '1px solid',\n    p: 1,\n    background: '#f4f4f4',\n  },\n  like: {\n    position: 'absolute',\n    width: 70,\n    height: 50,\n    top: '10%',\n    right: '0%',\n    background: '#f4f4f4',\n    cursor: 'pointer',\n  },\n  button: {\n    border: 'none',\n  },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const Layout: React.FC<Props> = ({ children }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  const menuItems = [\n    {\n      text: 'Posts',\n      path: '/',\n    },\n    {\n      text: 'Add new post',\n      path: '/create',\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <List className={classes.drawer}>\n        {menuItems.map(item => (\n          <ListItem\n            className={classes.item}\n            button\n            key={item.text}\n            onClick={() => history.push(item.path)}\n          >\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n\n        <ClickAwayListener onClickAway={handleClickAway}>\n          <div>\n            <button type=\"button\" onClick={handleClick} className={classes.button}>\n              <img className={classes.like} src=\"https://icon-library.com/images/heart-icon-svg/heart-icon-svg-29.jpg\" alt=\"\" />\n            </button>\n            {open ? (\n              <Portal>\n                <Box className={classes.box}>\n                  Click me, I will stay visible until you click outside.\n                </Box>\n              </Portal>\n            ) : null}\n          </div>\n        </ClickAwayListener>\n      </List>\n      <div className={classes.page}>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { routes } from './routes';\nimport { Layout } from './pages/Layout';\n\nexport const App: React.FC = () => {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          {routes.map(item => (\n            <Route exact path={item.path} key={item.path}>\n              {item.page}\n            </Route>\n          ))}\n        </Switch>\n      </Layout>\n    </Router>\n  );\n};\n","/* eslint-disable */\nimport { AnyAction } from 'redux';\nimport {\n  SET_POSTS,\n  SET_POST,\n  SET_COMMENTS,\n  SET_COMMENT,\n  SET_LOADER,\n  SET_SEARCH_VALUE,\n  SET_SELECT_VALUE,\n  SET_SELECT_PAGE,\n  SET_SELECT_VIEW,\n} from '../types';\n\nconst initialState: RootState = {\n  posts: [],\n  post: null,\n  comments: [],\n  comment: null,\n  userId: null,\n  loader: true,\n  query: '',\n  select: '',\n  page: '6',\n  view: 'module'\n};\n\nexport const postsReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_POSTS:\n      return {\n        ...state,\n        posts: action.posts,\n      };\n\n    case SET_POST:\n      return {\n        ...state,\n        post: action.post,\n      };\n\n    case SET_COMMENTS:\n      return {\n        ...state,\n        comments: action.comments,\n      };\n\n    case SET_COMMENT:\n      return {\n        ...state,\n        comment: action.comment,\n      };\n\n    case SET_LOADER:\n      return {\n        ...state,\n        loader: action.loader,\n      };\n\n    case SET_SEARCH_VALUE: {\n      return {\n          ...state,\n          query: action.query,\n      };\n    }\n\n    case SET_SELECT_VALUE: {\n      return {\n          ...state,\n          select: action.select,\n      };\n    }\n\n    case SET_SELECT_PAGE: {\n      return {\n          ...state,\n          page: action.page,\n      };\n    }\n\n    case SET_SELECT_VIEW: {\n      return {\n          ...state,\n          view: action.view,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { postsReducer } from './reducers/postsReducer';\n\nexport const store = createStore(\n  postsReducer,\n  applyMiddleware(thunk),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './scss/index.scss';\nimport { App } from './App';\nimport { store } from './redux/store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}